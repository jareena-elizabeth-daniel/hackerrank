import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.regex.*;

public class Solution {

    
    public static long recursiveSuperDigit(long d)
    {   int sum1=0;
        if(d<=9)
            return d;
       
        while(d>0)
        {
            int rem =(int)d%10;
            sum1 +=rem;
            d/=10;
        }
        return recursiveSuperDigit(sum1);
            
    }
    // Complete the superDigit function below.
    static int superDigit(String n, int k) 
    {

        long sum = 0l; 
       for(int i=0;i<n.length();i++)
       {
           sum = sum + n.charAt(i)-'0' ; 
       }
        sum = sum*k;
        long result= recursiveSuperDigit(sum);
        
        return (int)result;

    }

    private static final Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) throws IOException {
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        String[] nk = scanner.nextLine().split(" ");

        String n = nk[0];

        int k = Integer.parseInt(nk[1]);

        int result = superDigit(n, k);

        bufferedWriter.write(String.valueOf(result));
        bufferedWriter.newLine();

        bufferedWriter.close();

        scanner.close();
    }
}
