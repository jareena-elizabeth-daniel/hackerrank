import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.regex.*;

public class Solution {

    // Complete the shortPalindrome function below.
    static int shortPalindrome(String s) {

        int mod = 1000*1000*1000 + 7;
         
        int possible = 0;
        int[] array1 = new int[26];
        
        int[] array3 = new int[26]; 
        int[][] array2 = new int[26][26];
                     
        for(int i = 0; i < s.length();i++){
            int count = (int)(s.charAt(i)-'a');
            possible = possible + (array3[count]%mod);
            possible = possible%mod;
            for (int j = 0; j < 26; j++){
                array3[j] = array3[j] + (array2[j][count]%mod);
                array3[j] = array3[j]%mod;
            }
            for (int j = 0; j < 26;j++){
                array2[j][count] = array2[j][count] +(array1[j]%mod);
                 array2[j][count] =  array2[j][count]%mod;
            }
            
            array1[count]++;
            array1[count] = array1[count]%mod;
        }

        return possible;

    }

    private static final Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) throws IOException {
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        String s = scanner.nextLine();

        int result = shortPalindrome(s);

        bufferedWriter.write(String.valueOf(result));
        bufferedWriter.newLine();

        bufferedWriter.close();

        scanner.close();
    }
}
